// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindArrayLength-8]
	_ = x[MemoryKindDictionaryBase-9]
	_ = x[MemoryKindDictionarySize-10]
	_ = x[MemoryKindCompositeBase-11]
	_ = x[MemoryKindCompositeSize-12]
	_ = x[MemoryKindOptional-13]
	_ = x[MemoryKindNil-14]
	_ = x[MemoryKindVoid-15]
	_ = x[MemoryKindTypeValue-16]
	_ = x[MemoryKindPathValue-17]
	_ = x[MemoryKindCapabilityValue-18]
	_ = x[MemoryKindLinkValue-19]
	_ = x[MemoryKindStorageReferenceValue-20]
	_ = x[MemoryKindEphemeralReferenceValue-21]
	_ = x[MemoryKindInterpretedFunction-22]
	_ = x[MemoryKindHostFunction-23]
	_ = x[MemoryKindBoundFunction-24]
	_ = x[MemoryKindBigInt-25]
	_ = x[MemoryKindPrimitiveStaticType-26]
	_ = x[MemoryKindRawString-27]
	_ = x[MemoryKindAddressLocation-28]
	_ = x[MemoryKindBytes-29]
	_ = x[MemoryKindVariable-30]
	_ = x[MemoryKindValueToken-31]
	_ = x[MemoryKindSyntaxToken-32]
	_ = x[MemoryKindSpaceToken-33]
	_ = x[MemoryKindProgram-34]
	_ = x[MemoryKindIdentifier-35]
	_ = x[MemoryKindArgument-36]
	_ = x[MemoryKindBlock-37]
	_ = x[MemoryKindFunctionBlock-38]
	_ = x[MemoryKindParameter-39]
	_ = x[MemoryKindParameterList-40]
	_ = x[MemoryKindTransfer-41]
	_ = x[MemoryKindMembers-42]
	_ = x[MemoryKindTypeAnnotation-43]
	_ = x[MemoryKindDictionaryEntry-44]
	_ = x[MemoryKindFunctionDeclaration-45]
	_ = x[MemoryKindCompositeDeclaration-46]
	_ = x[MemoryKindInterfaceDeclaration-47]
	_ = x[MemoryKindEnumCaseDeclaration-48]
	_ = x[MemoryKindFieldDeclaration-49]
	_ = x[MemoryKindTransactionDeclaration-50]
	_ = x[MemoryKindImportDeclaration-51]
	_ = x[MemoryKindVariableDeclaration-52]
	_ = x[MemoryKindSpecialFunctionDeclaration-53]
	_ = x[MemoryKindPragmaDeclaration-54]
	_ = x[MemoryKindAssignmentStatement-55]
	_ = x[MemoryKindBreakStatement-56]
	_ = x[MemoryKindContinueStatement-57]
	_ = x[MemoryKindEmitStatement-58]
	_ = x[MemoryKindExpressionStatement-59]
	_ = x[MemoryKindForStatement-60]
	_ = x[MemoryKindIfStatement-61]
	_ = x[MemoryKindReturnStatement-62]
	_ = x[MemoryKindSwapStatement-63]
	_ = x[MemoryKindSwitchStatement-64]
	_ = x[MemoryKindWhileStatement-65]
	_ = x[MemoryKindBooleanExpression-66]
	_ = x[MemoryKindNilExpression-67]
	_ = x[MemoryKindStringExpression-68]
	_ = x[MemoryKindIntegerExpression-69]
	_ = x[MemoryKindFixedPointExpression-70]
	_ = x[MemoryKindArrayExpression-71]
	_ = x[MemoryKindDictionaryExpression-72]
	_ = x[MemoryKindIdentifierExpression-73]
	_ = x[MemoryKindInvocationExpression-74]
	_ = x[MemoryKindMemberExpression-75]
	_ = x[MemoryKindIndexExpression-76]
	_ = x[MemoryKindConditionalExpression-77]
	_ = x[MemoryKindUnaryExpression-78]
	_ = x[MemoryKindBinaryExpression-79]
	_ = x[MemoryKindFunctionExpression-80]
	_ = x[MemoryKindCastingExpression-81]
	_ = x[MemoryKindCreateExpression-82]
	_ = x[MemoryKindDestroyExpression-83]
	_ = x[MemoryKindReferenceExpression-84]
	_ = x[MemoryKindForceExpression-85]
	_ = x[MemoryKindPathExpression-86]
	_ = x[MemoryKindConstantSizedType-87]
	_ = x[MemoryKindDictionaryType-88]
	_ = x[MemoryKindFunctionType-89]
	_ = x[MemoryKindInstantiationType-90]
	_ = x[MemoryKindNominalType-91]
	_ = x[MemoryKindOptionalType-92]
	_ = x[MemoryKindReferenceType-93]
	_ = x[MemoryKindRestrictedType-94]
	_ = x[MemoryKindVariableSizedType-95]
	_ = x[MemoryKindPosition-96]
	_ = x[MemoryKindRange-97]
	_ = x[MemoryKindLast-98]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseArrayLengthDictionaryBaseDictionarySizeCompositeBaseCompositeSizeOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntPrimitiveStaticTypeRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 67, 81, 95, 108, 121, 129, 132, 136, 145, 154, 169, 178, 199, 222, 241, 253, 266, 272, 291, 300, 315, 320, 328, 338, 349, 359, 366, 376, 384, 389, 402, 411, 424, 432, 439, 453, 468, 487, 507, 527, 546, 562, 584, 601, 620, 646, 663, 682, 696, 713, 726, 745, 757, 768, 783, 796, 811, 825, 842, 855, 871, 888, 908, 923, 943, 963, 983, 999, 1014, 1035, 1050, 1066, 1084, 1101, 1117, 1134, 1153, 1168, 1182, 1199, 1213, 1225, 1242, 1253, 1265, 1278, 1292, 1309, 1317, 1322, 1326}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
