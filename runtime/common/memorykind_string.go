// Code generated by "stringer -type=MemoryKind -trimprefix=MemoryKind"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MemoryKindUnknown-0]
	_ = x[MemoryKindBool-1]
	_ = x[MemoryKindAddress-2]
	_ = x[MemoryKindString-3]
	_ = x[MemoryKindCharacter-4]
	_ = x[MemoryKindMetaType-5]
	_ = x[MemoryKindNumber-6]
	_ = x[MemoryKindArrayBase-7]
	_ = x[MemoryKindDictionaryBase-8]
	_ = x[MemoryKindCompositeBase-9]
	_ = x[MemoryKindSimpleCompositeBase-10]
	_ = x[MemoryKindOptional-11]
	_ = x[MemoryKindNil-12]
	_ = x[MemoryKindVoid-13]
	_ = x[MemoryKindTypeValue-14]
	_ = x[MemoryKindPathValue-15]
	_ = x[MemoryKindCapabilityValue-16]
	_ = x[MemoryKindLinkValue-17]
	_ = x[MemoryKindStorageReferenceValue-18]
	_ = x[MemoryKindEphemeralReferenceValue-19]
	_ = x[MemoryKindInterpretedFunction-20]
	_ = x[MemoryKindHostFunction-21]
	_ = x[MemoryKindBoundFunction-22]
	_ = x[MemoryKindBigInt-23]
	_ = x[MemoryKindSimpleComposite-24]
	_ = x[MemoryKindAtreeArrayDataSlab-25]
	_ = x[MemoryKindAtreeArrayMetaDataSlab-26]
	_ = x[MemoryKindAtreeMapDataSlab-27]
	_ = x[MemoryKindAtreeMapMetaDataSlab-28]
	_ = x[MemoryKindAtreeMapElementOverhead-29]
	_ = x[MemoryKindPrimitiveStaticType-30]
	_ = x[MemoryKindCompositeStaticType-31]
	_ = x[MemoryKindInterfaceStaticType-32]
	_ = x[MemoryKindVariableSizedStaticType-33]
	_ = x[MemoryKindConstantSizedStaticType-34]
	_ = x[MemoryKindDictionaryStaticType-35]
	_ = x[MemoryKindOptionalStaticType-36]
	_ = x[MemoryKindRestrictedStaticType-37]
	_ = x[MemoryKindReferenceStaticType-38]
	_ = x[MemoryKindCapabilityStaticType-39]
	_ = x[MemoryKindFunctionStaticType-40]
	_ = x[MemoryKindCadenceVoid-41]
	_ = x[MemoryKindCadenceOptional-42]
	_ = x[MemoryKindCadenceBool-43]
	_ = x[MemoryKindCadenceString-44]
	_ = x[MemoryKindCadenceCharacter-45]
	_ = x[MemoryKindRawString-46]
	_ = x[MemoryKindAddressLocation-47]
	_ = x[MemoryKindBytes-48]
	_ = x[MemoryKindVariable-49]
	_ = x[MemoryKindValueToken-50]
	_ = x[MemoryKindSyntaxToken-51]
	_ = x[MemoryKindSpaceToken-52]
	_ = x[MemoryKindProgram-53]
	_ = x[MemoryKindIdentifier-54]
	_ = x[MemoryKindArgument-55]
	_ = x[MemoryKindBlock-56]
	_ = x[MemoryKindFunctionBlock-57]
	_ = x[MemoryKindParameter-58]
	_ = x[MemoryKindParameterList-59]
	_ = x[MemoryKindTransfer-60]
	_ = x[MemoryKindMembers-61]
	_ = x[MemoryKindTypeAnnotation-62]
	_ = x[MemoryKindDictionaryEntry-63]
	_ = x[MemoryKindFunctionDeclaration-64]
	_ = x[MemoryKindCompositeDeclaration-65]
	_ = x[MemoryKindInterfaceDeclaration-66]
	_ = x[MemoryKindEnumCaseDeclaration-67]
	_ = x[MemoryKindFieldDeclaration-68]
	_ = x[MemoryKindTransactionDeclaration-69]
	_ = x[MemoryKindImportDeclaration-70]
	_ = x[MemoryKindVariableDeclaration-71]
	_ = x[MemoryKindSpecialFunctionDeclaration-72]
	_ = x[MemoryKindPragmaDeclaration-73]
	_ = x[MemoryKindAssignmentStatement-74]
	_ = x[MemoryKindBreakStatement-75]
	_ = x[MemoryKindContinueStatement-76]
	_ = x[MemoryKindEmitStatement-77]
	_ = x[MemoryKindExpressionStatement-78]
	_ = x[MemoryKindForStatement-79]
	_ = x[MemoryKindIfStatement-80]
	_ = x[MemoryKindReturnStatement-81]
	_ = x[MemoryKindSwapStatement-82]
	_ = x[MemoryKindSwitchStatement-83]
	_ = x[MemoryKindWhileStatement-84]
	_ = x[MemoryKindBooleanExpression-85]
	_ = x[MemoryKindNilExpression-86]
	_ = x[MemoryKindStringExpression-87]
	_ = x[MemoryKindIntegerExpression-88]
	_ = x[MemoryKindFixedPointExpression-89]
	_ = x[MemoryKindArrayExpression-90]
	_ = x[MemoryKindDictionaryExpression-91]
	_ = x[MemoryKindIdentifierExpression-92]
	_ = x[MemoryKindInvocationExpression-93]
	_ = x[MemoryKindMemberExpression-94]
	_ = x[MemoryKindIndexExpression-95]
	_ = x[MemoryKindConditionalExpression-96]
	_ = x[MemoryKindUnaryExpression-97]
	_ = x[MemoryKindBinaryExpression-98]
	_ = x[MemoryKindFunctionExpression-99]
	_ = x[MemoryKindCastingExpression-100]
	_ = x[MemoryKindCreateExpression-101]
	_ = x[MemoryKindDestroyExpression-102]
	_ = x[MemoryKindReferenceExpression-103]
	_ = x[MemoryKindForceExpression-104]
	_ = x[MemoryKindPathExpression-105]
	_ = x[MemoryKindConstantSizedType-106]
	_ = x[MemoryKindDictionaryType-107]
	_ = x[MemoryKindFunctionType-108]
	_ = x[MemoryKindInstantiationType-109]
	_ = x[MemoryKindNominalType-110]
	_ = x[MemoryKindOptionalType-111]
	_ = x[MemoryKindReferenceType-112]
	_ = x[MemoryKindRestrictedType-113]
	_ = x[MemoryKindVariableSizedType-114]
	_ = x[MemoryKindPosition-115]
	_ = x[MemoryKindRange-116]
	_ = x[MemoryKindElaboration-117]
	_ = x[MemoryKindLast-118]
}

const _MemoryKind_name = "UnknownBoolAddressStringCharacterMetaTypeNumberArrayBaseDictionaryBaseCompositeBaseSimpleCompositeBaseOptionalNilVoidTypeValuePathValueCapabilityValueLinkValueStorageReferenceValueEphemeralReferenceValueInterpretedFunctionHostFunctionBoundFunctionBigIntSimpleCompositeAtreeArrayDataSlabAtreeArrayMetaDataSlabAtreeMapDataSlabAtreeMapMetaDataSlabAtreeMapElementOverheadPrimitiveStaticTypeCompositeStaticTypeInterfaceStaticTypeVariableSizedStaticTypeConstantSizedStaticTypeDictionaryStaticTypeOptionalStaticTypeRestrictedStaticTypeReferenceStaticTypeCapabilityStaticTypeFunctionStaticTypeCadenceVoidCadenceOptionalCadenceBoolCadenceStringCadenceCharacterRawStringAddressLocationBytesVariableValueTokenSyntaxTokenSpaceTokenProgramIdentifierArgumentBlockFunctionBlockParameterParameterListTransferMembersTypeAnnotationDictionaryEntryFunctionDeclarationCompositeDeclarationInterfaceDeclarationEnumCaseDeclarationFieldDeclarationTransactionDeclarationImportDeclarationVariableDeclarationSpecialFunctionDeclarationPragmaDeclarationAssignmentStatementBreakStatementContinueStatementEmitStatementExpressionStatementForStatementIfStatementReturnStatementSwapStatementSwitchStatementWhileStatementBooleanExpressionNilExpressionStringExpressionIntegerExpressionFixedPointExpressionArrayExpressionDictionaryExpressionIdentifierExpressionInvocationExpressionMemberExpressionIndexExpressionConditionalExpressionUnaryExpressionBinaryExpressionFunctionExpressionCastingExpressionCreateExpressionDestroyExpressionReferenceExpressionForceExpressionPathExpressionConstantSizedTypeDictionaryTypeFunctionTypeInstantiationTypeNominalTypeOptionalTypeReferenceTypeRestrictedTypeVariableSizedTypePositionRangeElaborationLast"

var _MemoryKind_index = [...]uint16{0, 7, 11, 18, 24, 33, 41, 47, 56, 70, 83, 102, 110, 113, 117, 126, 135, 150, 159, 180, 203, 222, 234, 247, 253, 268, 286, 308, 324, 344, 367, 386, 405, 424, 447, 470, 490, 508, 528, 547, 567, 585, 596, 611, 622, 635, 651, 660, 675, 680, 688, 698, 709, 719, 726, 736, 744, 749, 762, 771, 784, 792, 799, 813, 828, 847, 867, 887, 906, 922, 944, 961, 980, 1006, 1023, 1042, 1056, 1073, 1086, 1105, 1117, 1128, 1143, 1156, 1171, 1185, 1202, 1215, 1231, 1248, 1268, 1283, 1303, 1323, 1343, 1359, 1374, 1395, 1410, 1426, 1444, 1461, 1477, 1494, 1513, 1528, 1542, 1559, 1573, 1585, 1602, 1613, 1625, 1638, 1652, 1669, 1677, 1682, 1693, 1697}

func (i MemoryKind) String() string {
	if i >= MemoryKind(len(_MemoryKind_index)-1) {
		return "MemoryKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryKind_name[_MemoryKind_index[i]:_MemoryKind_index[i+1]]
}
